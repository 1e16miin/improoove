{
  "definitions": {
    "CreateProjectInput": {
      "description": "Input Schema of project",
      "example": {
        "color": "#000000",
        "endDate": "2020-10-10T00:00:00Z",
        "name": "name",
        "objective": "objective",
        "startDate": "2020-10-01T00:00:00Z"
      },
      "properties": {
        "color": {
          "description": "project main color",
          "type": "string"
        },
        "endDate": {
          "description": "when finish project",
          "format": "ISO-8601",
          "type": "string"
        },
        "name": {
          "description": "name of project",
          "type": "string"
        },
        "objective": {
          "description": "goal of project",
          "type": "string"
        },
        "startDate": {
          "description": "when start project",
          "format": "ISO-8601",
          "type": "string"
        }
      },
      "required": [
        "name",
        "objective",
        "color"
      ],
      "title": "CreateProjectInput",
      "type": "object"
    },
    "CreateStackInput": {
      "description": "Create Schema of Log and Feedback",
      "example": {
        "description": "description",
        "projectId": 1,
        "remind": 1000,
        "type": "LOG"
      },
      "properties": {
        "description": {
          "description": "When was the activity last updated",
          "type": "string"
        },
        "projectId": {
          "description": "ID of project",
          "type": "integer"
        },
        "remind": {
          "description": "When to send the reminder after create log",
          "type": "integer"
        },
        "type": {
          "description": "type of stack",
          "enum": [
            "LOG",
            "FEEDBACK"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "description",
        "projectId"
      ],
      "title": "Create Stack Input",
      "type": "object"
    },
    "Project": {
      "description": "",
      "properties": {
        "color": {
          "description": "project main color",
          "type": "string"
        },
        "endDate": {
          "description": "when finish project",
          "format": "ISO-8601",
          "type": "string"
        },
        "feedback_count": {
          "description": "count of feedbacks",
          "type": "integer"
        },
        "id": {
          "description": "The ID of project",
          "type": "integer"
        },
        "log_count": {
          "description": "count of logs",
          "type": "integer"
        },
        "name": {
          "description": "name of project",
          "type": "string"
        },
        "objective": {
          "description": "goal of project",
          "type": "string"
        },
        "startDate": {
          "description": "when start project",
          "format": "ISO-8601",
          "type": "string"
        }
      },
      "required": [
        "feedback_count",
        "log_count",
        "name",
        "color",
        "id"
      ],
      "title": "Project",
      "type": "object"
    },
    "Projects": {
      "description": "A collection of Users",
      "items": {
        "$ref": "#/definitions/Project"
      },
      "title": "Projects",
      "type": "array"
    },
    "Stack": {
      "description": "Stack",
      "properties": {
        "description": {
          "description": "description of stack",
          "type": "string"
        },
        "id": {
          "description": "The ID of stack",
          "type": "integer"
        },
        "projectId": {
          "description": "ID of project",
          "type": "integer"
        },
        "remind": {
          "description": "When to send the reminder after create log",
          "type": "integer"
        },
        "type": {
          "description": "type of stack",
          "enum": [
            "LOG",
            "FEEDBACK"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "description",
        "projectId",
        "id"
      ],
      "title": "Stack",
      "type": "object"
    },
    "Stacks": {
      "description": "A collection of Stacks",
      "items": {
        "$ref": "#/definitions/Stack"
      },
      "title": "Stacks",
      "type": "array"
    },
    "UpdateProjectInput": {
      "description": "Update Schema of project",
      "example": {
        "color": "#000000",
        "endDate": "2020-10-10T00:00:00Z",
        "name": "name",
        "objective": "objective",
        "startDate": "2020-10-01T00:00:00Z"
      },
      "properties": {
        "color": {
          "description": "project main color",
          "type": "string"
        },
        "endDate": {
          "description": "when finish project",
          "format": "ISO-8601",
          "type": "string"
        },
        "name": {
          "description": "name of project",
          "type": "string"
        },
        "objective": {
          "description": "goal of project",
          "type": "string"
        },
        "startDate": {
          "description": "when start project",
          "format": "ISO-8601",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "UpdateProjectInput",
      "type": "object"
    },
    "UpdateStackInput": {
      "description": "Update Schema of Log and Feedback",
      "properties": {
        "description": {
          "description": "When was the activity last updated",
          "type": "string"
        },
        "remind": {
          "description": "When to send the reminder after create log",
          "type": "integer"
        }
      },
      "required": [
        "description"
      ],
      "title": "Update Stack Input",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "title": "Improoove App",
    "version": "1.0"
  },
  "paths": {
    "/api/project": {
      "post": {
        "description": "Create project. This operation supports creating",
        "operationId": "create_project",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "project attributes",
            "in": "body",
            "name": "project",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateProjectInput"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "summary": "create project",
        "tags": [
          "Project"
        ]
      }
    },
    "/api/project/:id": {
      "patch": {
        "description": "update project. This operation supports updating",
        "operationId": "update_project",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "project ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "partial project attributes",
            "in": "body",
            "name": "project",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateProjectInput"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "summary": "update project",
        "tags": [
          "Project"
        ]
      }
    },
    "/api/project/index": {
      "get": {
        "description": "Query for projects. This operation supports with paging and filtering",
        "operationId": "list_projects",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "cursor",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "size of page",
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Projects"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Query for projects",
        "tags": [
          "Project"
        ]
      }
    },
    "/api/project/{id}": {
      "delete": {
        "description": "Delete project. This operation supports deleting",
        "operationId": "delete_project",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "project ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "delete project",
        "tags": [
          "Project"
        ]
      },
      "get": {
        "description": "Query for project. This operation supports filtering",
        "operationId": "get_project!",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "project ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Query for project",
        "tags": [
          "Project"
        ]
      }
    },
    "/api/project/{project_id}": {
      "delete": {
        "description": "Delete stack. This operation supports deleting",
        "operationId": "delete_stack",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "stack ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "delete stack",
        "tags": [
          "Stack"
        ]
      }
    },
    "/api/stack": {
      "post": {
        "description": "Create stack. This operation supports creating",
        "operationId": "create_stack",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "stack attributes",
            "in": "body",
            "name": "stack",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateStackInput"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "summary": "create stack",
        "tags": [
          "Stack"
        ]
      }
    },
    "/api/stack/index": {
      "get": {
        "description": "Query for Stacks. This operation supports with paging and filtering",
        "operationId": "list_stacks",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "cursor",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "size of page",
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stacks"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "Query for stacks",
        "tags": [
          "Stack"
        ]
      }
    },
    "/api/stack/index/{project_id}": {
      "get": {
        "description": "Query for Stacks. This operation supports with paging and filtering",
        "operationId": "list_stacks",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "project ID",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "type of stack",
            "enum": [
              "LOG",
              "FEEDBACK"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stacks"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "Query for stacks by project id",
        "tags": [
          "Stack"
        ]
      }
    },
    "/api/stack/{id}": {
      "get": {
        "description": "Query for stack. This operation supports filtering",
        "operationId": "get_stack!",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "stack ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Query for Stack",
        "tags": [
          "Stack"
        ]
      },
      "patch": {
        "description": "Update stack. This operation supports updating",
        "operationId": "update_stack",
        "parameters": [
          {
            "description": "uid",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "stack ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "partial project attributes",
            "in": "body",
            "name": "stack",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateStackInput"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "summary": "update stack",
        "tags": [
          "Stack"
        ]
      }
    }
  },
  "swagger": "2.0"
}